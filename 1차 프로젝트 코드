i=1
j=1
fi_cham_lane<-NULL
plot(z1,xlim=c(1,15000),ylim=c(0,15000))
k=1
cham_lane<-NULL
d1
for(k in 1:10){
  mat_id<-d1[k]
  RoitURL_mat <- paste0("https://kr.api.riotgames.com/lol/match/v4/matches/",mat_id)#,matches.gameId
  url_mat <-paste0(RoitURL_mat, paste0("?api_key=", apikey))
  j_mat<-fromJSON(getURL(url_mat))
# un_mat<-unlist(j_mat)
# m_mat<-as.matrix(un_mat)
# df_mat<-as.data.frame(m_mat)
# df_mat<-t(df_mat)
# aa_mat<-merge(aa_mat,df_mat,all = TRUE)
# aa_mat[is.na(aa_mat)]<-0##결측치 처리
j<-1
for(j in c(1:10)){
  RoitURL_mat_lane <- paste0("https://kr.api.riotgames.com/lol/match/v4/timelines/by-match/",mat_id)#,matches.gameId
  url_mat_lane <-paste0(RoitURL_mat_lane, paste0("?api_key=", apikey))
  j_mat_lane<-fromJSON(getURL(url_mat_lane))
  a<-j_mat_lane[["frames"]]
  z1<-NULL
  z1$x<-a$participantFrames[,j]$position[,1]
  z1$y<-a$participantFrames[,j]$position[,2]
  z1<-as.data.frame(z1)
  z1<-head(z1,5)
  i<-1
  TOP<-0
  JUNGLE<-0
  MID<-0
  BOT_CARRY<-0
  SUP<-0
  lane<-data.frame(TOP,JUNGLE,MID,BOT_CARRY,SUP)
  
  if (j_mat[["participants"]][["spell1Id"]][j]==11 | 
      j_mat[["participants"]][["spell2Id"]][j]==11 ){
    lane$JUNGLE<-lane$JUNGLE+20
  }else if (j_mat[["participants"]][["stats"]][["totalMinionsKilled"]][j]==min(j_mat[["participants"]][["stats"]][["totalMinionsKilled"]][c(1:5)]) |
           j_mat[["participants"]][["stats"]][["totalMinionsKilled"]][j]==min(j_mat[["participants"]][["stats"]][["totalMinionsKilled"]][c(6:10)])){
    lane$SUP<-lane$SUP+20
  } 
  for(i in c(1:5)){
    
    
    if (z1$x[i]>=600 & z1$x[i]<=1800 & 
        z1$y[i]>=8400 & z1$y[i]<=14100) {
      lane$TOP<-lane$TOP+1
    }
    else if (z1$x[i]>=600 & z1$x[i]<=4500 & 
             z1$y[i]>=10200 & z1$y[i]<=14400) {
      lane$TOP<-lane$TOP+1
    }  
    else if (z1$x[i]>=900 & z1$x[i]<=6000 & 
             z1$y[i]>=13200 & z1$y[i]<=14400) {
      lane$TOP<-lane$TOP+1
    }
    else if (z1$x[i]>=4850 & z1$x[i]<=10000 &
             z1$y[i]>=4850 & z1$y[i]<=12000)  {
      lane$MID<-lane$MID+1
    }
    else if (z1$x[i]>=5600 & z1$x[i]<=8850 &
             z1$y[i]>=6000 & z1$y[i]<=8700) {
      lane$MID<-lane$MID+1
    }
    else if (z1$x[i]>=6500 & z1$x[i]<=9600 &
             z1$y[i]>=7000 & z1$y[i]<=9300){
      lane$MID<-lane$MID+1 
    }
    else if (z1$x[i]>=3800 & z1$x[i]<=6600 &
             z1$y[i]>=4500 & z1$y[i]<=6700){
      lane$MID<-lane$MID+1
    }
    else if (z1$x[i]>=5000 & z1$x[i]<=10000 &
             z1$y[i]>=450 & z1$y[i]<=15000){
      lane$BOT_CARRY<-lane$BOT_CARRY+1
      lane$SUP<-lane$SUP+1
    }
    else if (z1$x[i]>=10000 & z1$x[i]<=14700&
             z1$y[i]>=600 & z1$y[i]<=5000){
      lane$BOT_CARRY<-lane$BOT_CARRY+1
      lane$SUP<-lane$SUP+1
    }
    else if (z1$x[i]>=5000 & z1$x[i]<=14700&
             z1$y[i]>=1350 & z1$y[i]<=14700) {
      lane$BOT_CARRY<-lane$BOT_CARRY+1
      lane$SUP<-lane$SUP+1
    }
    else{
      lane$MID<-lane$MID+1
    }
    
  } 
 
  cham_lane<-names(which.max(lane))
  fi_cham_lane<-rbind(fi_cham_lane,cham_lane)
  fi_cham_lane<-as.data.frame(fi_cham_lane)
 
  }

 }


